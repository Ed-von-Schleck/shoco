#ifndef _SHOCO_INTERNAL
#error This header file is only to be included by 'shoco.c'.
#endif
#pragma once
/*
This file was generated by 'generate_compressor_model.py'
so don't edit this by hand. Also, do not include this file
anywhere. It is internal to 'shoco.c'. Include 'shoco.h'
if you want to use shoco in your project.
*/

#define MIN_CHR 39
#define MAX_CHR 123

static const char chrs_by_chr_id[32] = {
  'e', 'i', 'a', 'r', 'n', 'o', 't', 's', 'l', 'c', '\'', 'u', 'p', 'm', 'd', 'h', 'g', 'b', 'f', 'v', 'k', 'y', 'w', 'z', 'x', 'M', 'q', 'j', 'S', 'C', 'A', 'B'
};

static const int8_t chr_ids_by_chr[256] = {
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 30, 31, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, -1, -1, -1, -1, -1, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 17, 9, 14, 0, 18, 16, 15, 1, 27, 20, 8, 13, 4, 5, 12, 26, 3, 7, 6, 11, 19, 22, 24, 21, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
};

static const int8_t successor_ids_by_chr_id_and_chr_id[32][32] = {
  {10, -1, 6, 0, 2, -1, 7, 1, 4, 8, 5, -1, 11, 9, 3, -1, 15, -1, 14, 13, -1, -1, -1, -1, 12, -1, -1, -1, -1, -1, -1, -1},
  {5, -1, 7, 11, 0, 2, 3, 1, 6, 4, -1, -1, 14, 8, 9, -1, 10, -1, 15, 12, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1},
  {-1, 9, -1, 2, 0, -1, 1, 4, 3, 5, 12, 13, 10, 6, 7, -1, 11, 8, -1, 15, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, 2, 1, 9, 12, 3, 6, 4, 15, 13, 5, 7, -1, 11, 8, -1, 14, -1, -1, -1, -1, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {1, 5, 7, -1, 10, 9, 2, 3, -1, 8, 6, 12, -1, -1, 4, -1, 0, -1, 13, 14, 11, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {-1, -1, 14, 1, 0, 6, 7, 5, 3, 9, -1, 2, 8, 4, 12, -1, 11, 15, -1, 13, -1, -1, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {1, 0, 2, 3, 15, 4, 8, 6, 11, 12, 7, 9, -1, 14, -1, 5, -1, -1, -1, -1, -1, 10, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {2, 3, 7, -1, 13, 10, 0, 1, 12, 5, 6, 9, 8, 11, -1, 4, -1, -1, -1, -1, 14, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, 1, 2, -1, -1, 4, 9, 7, 3, -1, 8, 6, 15, 11, 10, -1, -1, -1, 14, 13, 12, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {3, 6, 1, 7, -1, 0, 5, 12, 9, 10, 13, 8, -1, -1, -1, 2, -1, -1, -1, -1, 4, 11, -1, -1, -1, -1, 14, -1, -1, 15, -1, -1},
  {8, 11, 7, 9, 5, -1, 1, 0, 2, 4, -1, -1, -1, -1, 3, -1, -1, -1, -1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, 12, -1},
  {7, 9, 8, 2, 0, 15, 4, 1, 3, 6, -1, -1, 10, 5, 12, -1, 13, 11, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, 4, 2, 1, 15, 3, 10, 9, 5, -1, 11, 8, 7, 14, -1, 6, -1, 13, -1, -1, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {1, 2, 0, 14, 11, 3, -1, 9, 12, 15, 8, 7, 4, 6, -1, -1, -1, 5, 13, -1, -1, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, 1, 3, 5, 12, 2, -1, 4, 8, -1, 6, 7, -1, 14, 9, -1, 10, 15, -1, -1, -1, 11, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, 3, 1, 7, 12, 2, 5, 9, 10, -1, 6, 4, -1, 11, -1, -1, -1, 14, 15, -1, -1, 8, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, 3, 1, 2, 11, 6, 14, 10, 5, -1, 8, 7, -1, 13, -1, 4, 9, -1, -1, -1, -1, 12, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {1, 4, 2, 5, 15, 3, 11, 8, 0, -1, 10, 6, -1, 14, 13, -1, -1, 7, -1, -1, -1, 9, -1, -1, -1, -1, -1, 12, -1, -1, -1, -1},
  {2, 0, 6, 7, 13, 1, 8, 11, 3, -1, 10, 5, -1, -1, -1, 14, 15, 12, 4, -1, -1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, 1, 2, 9, 13, 3, 15, 8, 10, -1, 6, 4, -1, -1, 11, 12, -1, -1, -1, 7, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, 1, 4, 12, 6, 8, -1, 2, 5, -1, 3, 10, 15, 14, -1, 9, -1, 11, -1, -1, -1, 7, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {2, 4, 3, 11, 7, 10, 12, 1, 8, 9, 0, -1, 5, 6, 13, -1, -1, 14, -1, -1, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {1, 2, 0, 7, 5, 3, 14, 6, 8, -1, 9, -1, 13, 15, 10, 4, -1, 11, -1, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, 1, 2, -1, 12, 4, 13, -1, 6, -1, 5, 8, 11, 10, -1, 9, -1, 15, -1, 14, -1, 7, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1},
  {3, 0, 6, -1, -1, 7, 2, -1, 12, 4, 5, 8, 1, -1, -1, 9, 15, 14, 13, -1, -1, 10, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {3, 2, 0, 13, 11, 1, -1, -1, -1, 4, 7, 5, -1, -1, -1, -1, -1, 9, -1, -1, -1, 6, -1, -1, -1, -1, -1, -1, 10, 14, 8, -1},
  {-1, 1, 3, -1, -1, -1, -1, -1, -1, -1, 2, 0, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {3, 4, 1, 8, -1, 2, -1, 5, -1, -1, 7, 0, -1, -1, -1, -1, -1, -1, -1, -1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {2, 6, 0, -1, 12, 7, 3, -1, 10, 4, 13, 5, 8, 14, -1, 1, -1, -1, -1, -1, -1, 11, 9, -1, -1, -1, -1, -1, -1, -1, 15, -1},
  {5, 7, 0, 4, -1, 1, -1, 15, 3, -1, 9, 6, -1, -1, -1, 2, -1, -1, -1, -1, -1, 8, -1, 10, -1, -1, -1, -1, -1, -1, 11, -1},
  {-1, -1, -1, 2, 1, -1, 7, 5, 0, 9, 12, 4, 10, 3, 6, -1, 11, 8, 14, 13, -1, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, 6, 1, 2, -1, 3, -1, -1, 5, -1, 9, 4, -1, -1, -1, 10, -1, -1, -1, -1, -1, 7, -1, -1, -1, 8, -1, 12, 11, 14, 13, -1}
};

static const int8_t chrs_by_chr_and_successor_id[MAX_CHR - MIN_CHR][16] = {
  {'s', 't', 'l', 'd', 'c', 'n', 'v', 'a', 'e', 'r', 'C', 'i', 'A', 'H', 'O', 'N'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'l', 'n', 'r', 'm', 'u', 's', 'd', 't', 'b', 'c', 'p', 'g', '\'', 'v', 'f', 'z'},
  {'e', 'a', 'r', 'o', 'u', 'l', 'i', 'y', 'M', '\'', 'h', 'S', 'j', 'A', 'C', 'J'},
  {'a', 'o', 'h', 'l', 'r', 'e', 'u', 'i', 'y', '\'', 'z', 'A', 'I', 'P', 'O', 's'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'a', 'o', 'i', 'e', 'c', 'u', 'y', '\'', 'A', 'b', 'S', 'n', 'I', 'r', 'C', '\xc3'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'a', 'h', 'e', 't', 'c', 'u', 'i', 'o', 'p', 'w', 'l', 'y', 'n', '\'', 'm', 'A'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'n', 't', 'r', 'l', 's', 'c', 'm', 'd', 'b', 'i', 'p', 'g', '\'', 'u', 'y', 'v'},
  {'l', 'e', 'a', 'o', 'i', 'r', 'u', 'b', 's', 'y', '\'', 't', 'j', 'd', 'm', 'n'},
  {'o', 'a', 'h', 'e', 'k', 't', 'i', 'r', 'u', 'l', 'c', 'y', 's', '\'', 'q', 'C'},
  {'e', 'i', 'o', 'a', 's', 'r', '\'', 'u', 'l', 'd', 'g', 'y', 'n', 'w', 'm', 'b'},
  {'r', 's', 'n', 'd', 'l', '\'', 'a', 't', 'c', 'm', 'e', 'p', 'x', 'v', 'f', 'g'},
  {'i', 'o', 'e', 'l', 'f', 'u', 'a', 'r', 't', 'y', '\'', 's', 'b', 'n', 'h', 'g'},
  {'e', 'a', 'r', 'i', 'h', 'l', 'o', 'u', '\'', 'g', 's', 'n', 'y', 'm', 't', 'w'},
  {'e', 'a', 'o', 'i', 'u', 't', '\'', 'r', 'y', 's', 'l', 'm', 'n', 'w', 'b', 'f'},
  {'n', 's', 'o', 't', 'c', 'e', 'l', 'a', 'm', 'd', 'g', 'r', 'v', 'z', 'p', 'f'},
  {'u', 'a', 'o', 'e', 'i', 's', 'k', '\'', 'r', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'e', 'i', 's', '\'', 'a', 'l', 'n', 'y', 'o', 'h', 'u', 'b', 'r', 'w', 'm', 'p'},
  {'e', 'i', 'a', 'l', 'o', 'y', 'u', 's', '\'', 't', 'd', 'm', 'k', 'v', 'f', 'p'},
  {'a', 'e', 'i', 'o', 'p', 'b', 'm', 'u', '\'', 's', 'y', 'n', 'l', 'f', 'r', 'c'},
  {'g', 'e', 't', 's', 'd', 'i', '\'', 'a', 'c', 'o', 'n', 'k', 'u', 'f', 'v', 'y'},
  {'n', 'r', 'u', 'l', 'm', 's', 'o', 't', 'p', 'c', 'w', 'g', 'd', 'v', 'a', 'b'},
  {'e', 'r', 'a', 'o', 'i', 'l', 'h', 'p', 'u', 's', 't', '\'', 'y', 'b', 'm', 'n'},
  {'u', 'i', '\'', 'a', 'b', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'e', 'a', 'i', 'o', 's', '\'', 't', 'u', 'd', 'r', 'y', 'm', 'n', 'c', 'g', 'l'},
  {'t', 's', 'e', 'i', 'h', 'c', '\'', 'a', 'p', 'u', 'o', 'm', 'l', 'n', 'k', 'y'},
  {'i', 'e', 'a', 'r', 'o', 'h', 's', '\'', 't', 'u', 'y', 'l', 'c', 'w', 'm', 'n'},
  {'n', 's', 'r', 'l', 't', 'm', 'c', 'e', 'a', 'i', 'p', 'b', 'd', 'g', 'f', 'o'},
  {'e', 'i', 'a', 'o', 'u', 'y', '\'', 'v', 's', 'r', 'l', 'd', 'h', 'n', 'I', 't'},
  {'a', 'e', 'i', 'o', 'h', 'n', 's', 'r', 'l', '\'', 'd', 'b', 'k', 'p', 't', 'm'},
  {'i', 'p', 't', 'e', 'c', '\'', 'a', 'o', 'u', 'h', 'y', 'w', 'l', 'f', 'b', 'g'},
  {'\'', 's', 'e', 'a', 'i', 'p', 'm', 'n', 'l', 'c', 'o', 'r', 't', 'd', 'b', 'w'},
  {'e', 'i', 'a', 'z', 'o', '\'', 'l', 'y', 'u', 'h', 'm', 'p', 'n', 't', 'v', 'b'}
};


typedef struct Pack {
  const uint32_t word;
  const unsigned int bytes_packed;
  const unsigned int bytes_unpacked;
  const unsigned int offsets[8];
  const int16_t _ALIGNED masks[8];
  const char header_mask;
  const char header;
} Pack;

#define PACK_COUNT 3
#define MAX_SUCCESSOR_N 7

static const Pack packs[PACK_COUNT] = {
  { 0x80000000, 1, 2, { 26, 24, 24, 24, 24, 24, 24, 24 }, { 15, 3, 0, 0, 0, 0, 0, 0 }, 0xc0, 0x80 },
  { 0xc0000000, 2, 4, { 25, 22, 19, 16, 16, 16, 16, 16 }, { 15, 7, 7, 7, 0, 0, 0, 0 }, 0xe0, 0xc0 },
  { 0xe0000000, 4, 8, { 23, 19, 15, 11, 8, 5, 2, 0 }, { 31, 15, 15, 15, 7, 7, 7, 3 }, 0xf0, 0xe0 }
};
